<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Spring</title>
  <link rel="alternate" href="https://spring.io/blog" />
  <link rel="self" href="https://spring.io/blog.atom" />
  <id>http://spring.io/blog.atom</id>
  <icon>https://spring.io/favicon.ico</icon>
  <updated>2017-02-13T18:38:00Z</updated>
  <entry>
    <title>SpringOne Platform 2016 Replay: Spring Data Hazelcast: Fluently Accessing Distributed Repositories</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/13/springone-platform-2016-replay-spring-data-hazelcast-fluently-accessing-distributed-repositories" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-14:2842</id>
    <updated>2017-02-13T18:38:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Victor Gamov, Neil Stevenson, Hazelcast&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/spring-data-hazelcast-fluently-accessing-distributed-repositories"&gt;http://www.slideshare.net/SpringCentral/spring-data-hazelcast-fluently-accessing-distributed-repositories&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The primary goal of the Spring Data project is to make it easier to build Spring-powered applications that use data access technologies.&lt;/p&gt;
&lt;p&gt;In this talk, Neil and Viktor will present using a new Spring Data for Hazelcast project and demonstrate how using the Spring Data paradigm gains the power of a distributed data repository.&lt;/p&gt;
&lt;p&gt;The implementation is built on the new Spring Data KeyValue module and is one of the first projects to do this. This module provides infrastructure components for creating repository abstractions for stores dealing with Key/Value pairs like java.util.Map or Hazelcast IMap.&lt;/p&gt;
&lt;p&gt;Through the means of the repository interface, CRUD operations and expression-based query methods can interrogate an in-memory data store in a manner consistent with the other Spring Data projects so developers can become productive quickly and easily.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/ybYqyQ_hmnY" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Streaming Live Data and the Hadoop Ecosystem</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/13/springone-platform-2016-replay-streaming-live-data-and-the-hadoop-ecosystem" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-14:2841</id>
    <updated>2017-02-13T18:34:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/streaming-live-data-and-the-hadoop-ecosystem"&gt;http://www.slideshare.net/SpringCentral/streaming-live-data-and-the-hadoop-ecosystem&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It’s not always easy to get the data you need for analysis. And it becomes even more challenging if it is live streaming data you are working with. Learn how you can make Hadoop work for you in the most effective way possible, especially when it comes to adapting to the agile business requirements of today’s competitive environment. We will cover the Hadoop ecosystem – what is Hadoop, HDFS, MapReduce, Yarn, and then how leading open source projects such as Hive, Ambari, Ranger, Atlas, NiFi interact and integrate to support the variety of data used for analytics today.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/MFPHXezrPF0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Spring with ApacheNiFi</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/13/springone-platform-2016-replay-spring-with-apachenifi" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-14:2840</id>
    <updated>2017-02-13T18:28:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Oleg Zhurakousky&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/spring-with-apachenifi"&gt;http://www.slideshare.net/SpringCentral/spring-with-apachenifi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Spring Integration has long captured the hearts and minds of the developers world wide for its emphasis on simplicity, modularity and productivity when it comes to all things related to work-flow orchestration and complex event processing and is successfully used in a variety of Big Data solutions. Apache NiFi, on the other hand, is a new addition to the already rich Big Data technology stack.&lt;/p&gt;
&lt;p&gt;Can the two complement one another?&lt;/p&gt;
&lt;p&gt;This hands-on talk, based on real field work and consisting of live demos and code, will provide a quick introduction to Apache NiFi, demonstrate its core features while concentrating on the WHY/WHERE and HOW of integrating the two technologies.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/F98NLule18I" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Writing comprehensive and guaranteed up-to-date REST API documentation</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/13/springone-platform-2016-replay-writing-comprehensive-and-guaranteed-up-to-date-rest-api-documentation" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-14:2839</id>
    <updated>2017-02-13T18:24:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Andreas Evers, Ordina JWorks&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/writing-comprehensive-and-guaranteed-uptodate-rest-api-documentation"&gt;http://www.slideshare.net/SpringCentral/writing-comprehensive-and-guaranteed-uptodate-rest-api-documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RESTful APIs are eating the world, yet all too often the documentation can cause indigestion for the APIs&amp;rsquo; developers and their users. Developers have to deal with annotation overload, repetition, and an unpleasant writing environment. Users are then left with documentation that&amp;rsquo;s inaccurate and difficult to use. It doesn&amp;rsquo;t have to be this way.&lt;/p&gt;
&lt;p&gt;This talk will introduce Spring REST Docs and its test-driven approach to RESTful API documentation. We&amp;rsquo;ll look at how it combines the power of Asciidoctor and your integration tests to produce documentation that&amp;rsquo;s accurate and easy-to-read, while keeping your code DRY and free from annotation overload. We&amp;rsquo;ll also look at some of the features that are new in Spring REST Docs 1.1, including support for REST Assured and Markdown.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/i8TDt7cUG3k" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Real World Microservices with Spring Cloud, Netflix OSS and Kubernetes</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/13/springone-platform-2016-replay-real-world-microservices-with-spring-cloud-netflix-oss-and-kubernetes" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-14:2838</id>
    <updated>2017-02-13T18:17:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Christian Posta, Redhat&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/real-world-microservices-with-spring-cloud-netflix-oss-and-kubernetes"&gt;http://www.slideshare.net/SpringCentral/real-world-microservices-with-spring-cloud-netflix-oss-and-kubernetes&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Building distributed systems - whether we call them SOA or microservices - is not easy. Open source communities like Spring, NetflixOSS and Kubernetes bring decades of experience building these systems, but the question always begs to be asked &amp;ldquo;do we implement these patterns in the application layer or in the infrastructure layer&amp;rdquo;?&lt;/p&gt;
&lt;p&gt;This is a Java developer-oriented presentation showing developers how to approach building microservices in the real world (influenced by experiences at large enterprise customers) using application-level components like Spring, Spring Cloud, and Netflix OSS and running them on infrastructure components like Docker and Kubernetes. We&amp;rsquo;ll cover some gotchas, patterns, and overall best practices for developing with this ecosystem.&lt;/p&gt;
&lt;p&gt;Specifically we&amp;rsquo;ll cover:&lt;br/&gt;-Service discovery in a container, clustered environment&lt;br/&gt;-Client side? Server side discovery? When to use which?&lt;br/&gt;-Distributed configuration techniques in a container environment with Kubernetes and Archaius&lt;br/&gt;-Bulkhead microservice interactions with Netflix OSS&lt;br/&gt;-Event-driven microservices&lt;br/&gt;-Application lifecycle management&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/UkXPu-z6mHs" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Orchestrate All the Things! with Spring Cloud Data Flow</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/13/springone-platform-2016-replay-orchestrate-all-the-things-with-spring-cloud-data-flow" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-14:2837</id>
    <updated>2017-02-13T18:08:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speakers: Eric Bottard &amp;amp; Ilayaperumal Gopinathan&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/orchestrate-all-the-things-with-spring-cloud-data-flow"&gt;http://www.slideshare.net/SpringCentral/orchestrate-all-the-things-with-spring-cloud-data-flow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What do things like Minecraft, a light bulb and your music library have in common? Well, nothing really. Until you come up with this crazy idea to link them together. This is where application orchestration comes in.&lt;/p&gt;
&lt;p&gt;In this session, you’ll learn how Spring Cloud Data Flow allows easy composition of microservices together. As the spiritual successor to Spring XD and the natural sidekick of Spring Cloud Stream, Data Flow has been thought as a way to deploy, run and manage loosely coupled apps in the cloud.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/w0PR2GfBe6w" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Task 1.2.0.M1 is now available</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/09/spring-cloud-task-1-2-0-m1-is-now-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Michael Minella</name>
    </author>
    <id>tag:spring.io,2017-02-09:2836</id>
    <updated>2017-02-09T20:42:53Z</updated>
    <content type="html">&lt;p&gt;We are pleased to announce that Spring Cloud Task 1.2.0.M1 is now available via Github and the Pivotal download repository. Many thanks to all of those who contributed to this release.&lt;/p&gt;&lt;h2&gt;&lt;a href="#spring-cloud-task-1-2-0-m1-offers-the-following-features" class="anchor" name="spring-cloud-task-1-2-0-m1-offers-the-following-features"&gt;&lt;/a&gt;Spring Cloud Task 1.2.0.M1 offers the following features:&lt;/h2&gt;
&lt;p&gt;This is the first milestone for the 1.2.x line of Spring Cloud Task. Intended to continue the integrations required for Spring Cloud Data Flow, this release provides the following new features:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
  &lt;p&gt;Better DataSource integration between task and batch - This release makes configuring the DataSource used by the task/batch integration easier.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;Allows an external process to update the external execution id - Prior to this release, the external execution id (the execution id for the underlying platform) had to be updated by the task itself. In some use cases, this is not possible. This release exposes the ability to update the external execution id outside the scope of the task itself.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;Allow the user to configure a prefix for the task tables - Similar to how Spring Batch allows a user to configure a prefix for the batch repository tables, Spring Cloud Task now exposes the ability to configure a prefix for task repository tables as well.&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;Add support for parent execution ids - In complex use cases, the ability for one task to launch multiple other tasks is very common. Spring Cloud Task has already supported this via partitioned batch jobs launching worker nodes as tasks. This release provides the ability within the task repository to associate the parent child relationship that occurs from that capability (both in the batch use case and with raw tasks).&lt;/p&gt;&lt;/li&gt;
  &lt;li&gt;
  &lt;p&gt;Upgrade to Spring Cloud Camden SR5 - This release is compatible with Spring Cloud Camden&amp;rsquo;s recent SR5 release.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;h2&gt;&lt;a href="#what-do-you-think" class="anchor" name="what-do-you-think"&gt;&lt;/a&gt;What do you think?&lt;/h2&gt;
&lt;p&gt;We look forward to your feedback on these new features in &lt;a href="https://github.com/spring-cloud/spring-cloud-task/issues"&gt;Github&lt;/a&gt;, &lt;a href="http://stackoverflow.com/tags/spring-cloud-task"&gt;StackOverflow&lt;/a&gt;, or to me directly via Twitter &lt;a href="https://twitter.com/michaelminella"&gt;@michaelminella&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;Finally, if you&amp;rsquo;re in the Atlanta area February 22-24, learn more about Spring Cloud Task at &lt;a href="https://devnexus.com/s/index"&gt;DevNexus&lt;/a&gt;! I&amp;rsquo;ll be speaking about it and it&amp;rsquo;s integration with Spring Batch as well as Spring Cloud Data Flow. You can learn about my talks here: &lt;a href="https://devnexus.com/s/speakers/2423"&gt;Michael Minella&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://cloud.spring.io/spring-cloud-task/"&gt;Spring Cloud Task Home&lt;/a&gt; | &lt;a href="https://github.com/spring-cloud/spring-cloud-task"&gt;Source on GitHub&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-cloud-task/current/reference/htmlsingle/"&gt;Reference Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Pipelines 1.0.0.M3 Released</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/09/spring-cloud-pipelines-1-0-0-m3-released" />
    <category term="releases" label="Releases" />
    <author>
      <name>Marcin Grzejszczak</name>
    </author>
    <id>tag:spring.io,2017-02-09:2835</id>
    <updated>2017-02-09T17:09:41Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;On behalf of the Spring Cloud team it is my pleasure to announce a new milestone release of Spring Cloud Pipelines - &lt;code&gt;1.0.0.M3&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="what-s-new"&gt;&lt;a class="anchor" href="#what-s-new"&gt;&lt;/a&gt;What&amp;#8217;s new?&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Apart from some bug and documentation fixes it’s providing an out of the box support for blue green deployment on Cloud Foundry (both for Concourse and Jenkins)! This is how we do it.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="imageblock"&gt;
&lt;div class="content"&gt;
&lt;img src="http://cloud.spring.io/spring-cloud-pipelines/img/intro/prod.png" alt="Production deployment"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;When you click &lt;code&gt;deploy to prod&lt;/code&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;we’re renaming the current instance of the app e.g. &lt;code&gt;fooService&lt;/code&gt; to &lt;code&gt;fooService-venerable&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;we’re deploying the new instance of the app under the &lt;code&gt;fooService&lt;/code&gt; name&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;now two instances of the same application are running on production&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;When you click on the &lt;code&gt;Complete switch over&lt;/code&gt; step:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;we’re deleting the old instance (&lt;code&gt;fooService-venerable&lt;/code&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="admonitionblock important"&gt;
&lt;table&gt;
&lt;tr&gt;
&lt;td class="icon"&gt;
&lt;div class="title"&gt;Important&lt;/div&gt;
&lt;/td&gt;
&lt;td class="content"&gt;
Remember to run this step only after you have confirmed that both instances are working fine!
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="sect1"&gt;
&lt;h2 id="links"&gt;&lt;a class="anchor" href="#links"&gt;&lt;/a&gt;Links&lt;/h2&gt;
&lt;div class="sectionbody"&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Please check out any of these links for more information or to contact us:&lt;/p&gt;
&lt;/div&gt;
&lt;div class="ulist"&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://cloud.spring.io/spring-cloud-pipelines/"&gt;Project page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://cloud.spring.io/spring-cloud-pipelines/spring-cloud-pipelines.html"&gt;Project documentation&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://cloud.spring.io/spring-cloud-pipelines/spring-cloud-pipelines.html#concourse"&gt;Concourse opinionated pipeline setup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://concourse.ci"&gt;Concourse Website&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://cloud.spring.io/spring-cloud-pipelines/spring-cloud-pipelines.html#jenkins"&gt;Jenkins opinionated pipeline setup&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/jenkinsci/job-dsl-plugin/wiki"&gt;Jenkins Job Dsl Plugin&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gitter.im/spring-cloud/spring-cloud-pipelines"&gt;Spring Cloud Pipelines Gitter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://github.com/spring-cloud/spring-cloud-pipelines"&gt;Spring Cloud Pipelines GitHub page&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Tips: Distributed Tracing with Zipkin</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/08/spring-tips-distributed-tracing-with-zipkin" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2017-01-26:2810</id>
    <updated>2017-02-08T01:39:00Z</updated>
    <content type="html">&lt;p&gt;Speaker: &lt;a href="https://www.twitter.com/starbuxman"&gt;Josh Long&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Hi Spring fans! In this tip, we&amp;rsquo;ll quickly look at how to integrate distributed tracing with Spring Cloud Sleuth and the OpenZipkin project.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/CFLZJSwbYI0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>This Week in Spring - February 7th, 2017</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/07/this-week-in-spring-february-7th-2017" />
    <category term="engineering" label="Engineering" />
    <author>
      <name>Josh Long</name>
    </author>
    <id>tag:spring.io,2017-02-07:2834</id>
    <updated>2017-02-07T10:38:00Z</updated>
    <content type="html">&lt;p&gt;Welcome to another installment of &lt;em&gt;This Week in Spring&lt;/em&gt;! We&amp;rsquo;ve got a lot to cover this week so let&amp;rsquo;s get to it.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Fred Melo is one of Pivotal&amp;rsquo;s brightest and when he talks about data, people listen. Here&amp;rsquo;s your chance to &lt;a href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-architecting-for-cloud-native-data-data-microservices-done-right-using-spring-cloud"&gt;watch his SpringOne Platform talk on data microservices&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The RabbitMQ Team has been busy! The RMQ Java Client has some very nice new (non-breaking) new features in &lt;a href="http://www.rabbitmq.com/blog/2016/11/24/rabbitmq-java-client-4-0-is-released"&gt;Metrics, logging and Java NIO&lt;/a&gt;, among other things.&lt;/li&gt;
  &lt;li&gt;Expanding on the metrics support in RMQ Java Client 4.0, the Rabbit team &lt;a href="http://www.rabbitmq.com/blog/2016/11/30/metrics-support-in-rabbitmq-java-client-4-0"&gt;blogs&lt;/a&gt; about using JMX, Spring Boot Actuator and Coda Hale&amp;rsquo;s awesome DropWizard Metrics library.&lt;/li&gt;
  &lt;li&gt;I liked this SpringOne Platform talk, from Confluent&amp;rsquo;s Joe Kutner, &lt;a href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-i-can-t-believe-it-s-not-a-queue-using-kafka-with-spring"&gt;&lt;em&gt;I Can&amp;rsquo;t Believe it&amp;rsquo;s not a Queue: using Apache Kafka with Spring&lt;/em&gt;&lt;/a&gt;. It&amp;rsquo;s a focused look on Apache Kafka, one of the most capable and cloud-native message queues these days - Apache Kafka - with Spring.&lt;/li&gt;
  &lt;li&gt;Check out Spring Integration and messaging &lt;a href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-spring-for-apache-kafka"&gt;guru Gary Russell&amp;rsquo;s SpringOne Platform look at Spring for Apache Kafka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;check out Spring and Spring for Apache Hadoop contributor &lt;a href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-spring-and-big-data"&gt;Thomas Risberg&amp;rsquo;s look at building big-data pipelines with Spring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;our friend Toshiaki Maki has &lt;a href="https://github.com/making/beansviz-spring-boot-actuator"&gt;built a &lt;em&gt;really&lt;/em&gt; cool Graphviz visualization of the beans in an application&lt;/a&gt; that&amp;rsquo;s accessible under the &lt;code&gt;/beansviz&lt;/code&gt; endpoint.&lt;/li&gt;
  &lt;li&gt;Spring Cloud contributor Vinicius Carvalho&amp;rsquo;s SpringOne Platform talk on &lt;a href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-building-resilient-and-evolutionary-data-microservices"&gt;evolutionary and resilient microservices is one to watch&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Integration Java DSL lead Artem Bilan just &lt;a href="https://spring.io/blog/2017/02/06/spring-for-apache-kafka-1-1-3-available-now"&gt;announced Spring for Apache Kafka 1.1.3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud ninja Marcin Grzejszczak &lt;a href="https://spring.io/blog/2017/02/06/spring-cloud-camden-sr5-is-available"&gt;just announced Spring Cloud Camden SR5&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;the team behind Spring Tool Suite is cooking up some amazing stuff for Spring Tool Suite 4, and a huge part of that is an extraction of the plugins in STS as language servers that can be used with a variety of other IDEs, including Atom and Microsoft VS Code. As part of the that, &lt;a href="https://spring.io/blog/2017/02/03/cloud-foundry-manifest-editor-beta-released-for-visual-studio-code"&gt;the team has just released the Cloud Foundry &lt;code&gt;manifest.yml&lt;/code&gt; editor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring IO Platform lead &lt;a href="https://spring.io/blog/2017/02/02/spring-io-platform-brussels-rc1"&gt;Andy Wilkinson just announced Spring IO Platform Brussels RC1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;not one to rest on his laurels, Andy &lt;em&gt;also&lt;/em&gt; just announced &lt;a href="https://spring.io/blog/2017/02/01/spring-io-platform-athens-sr3"&gt;Spring IO Platform Athens SR3&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Are you going to be at the fabulous DevNexus event in Atlanta, GA, later this month? &lt;a href="https://spring.io/blog/2017/02/01/spring-team-at-devnexus-2017"&gt;The Spring team will be there too!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;seems I missed a good one in January! Check out Muhammad Noor&amp;rsquo;s post on building &lt;a href="https://dzone.com/articles/functional-amp-reactive-spring-along-with-netflix"&gt;reactive based microservices with Spring Cloud and&lt;br/&gt; Reactor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Rashidi Zin put together a nice example of &lt;a href="https://github.com/rashidi/spring-boot-data-audit"&gt;using Spring Data to support entity auditing&lt;/a&gt;. Very cool Rashidi!&lt;/li&gt;
  &lt;li&gt;Bruno Krebs put together a very cool post on building &lt;a href="https://hackernoon.com/spring-boot-rest-tdd-from-scratch-15f13ed799e0#.hfy5lyjwl"&gt;a REST API wiht test-driven development (and Spring Boot, naturally)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Mario-Leander Reimer&amp;rsquo;s cloud-native workshop at the OOP17 conference looks pretty darned interesting! I wish I&amp;rsquo;d been there. For those of us that weren&amp;rsquo;t, though, &lt;a href="https://github.com/qaware/hitchhikers-guide-cloudnative"&gt;there is at least his Git repository&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Speaking of DevNexus, this oldie-but-a-goodie, &lt;a href="https://www.youtube.com/watch?v=X7O11GrHgjE"&gt;&lt;em&gt;Keeping it Clean: Lessons from Open Source and How to Polish&lt;/em&gt;&lt;/a&gt;, from Spring Boot co-lead Phil Webb is definitely a good watch if you haven&amp;rsquo;t seen it&lt;/li&gt;
  &lt;li&gt;While not, strictly speaking, related to Spring, continuous delivery is the grand unifiying theory behind microservices, agile, TDD, and so many other practices we take for granted today and few people &lt;a href="https://www.youtube.com/watch?v=nauFRW6gYjc"&gt;introduce the rationale behind it better than Chris Farley&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;This post has little to do with Spring itself but it is a &lt;em&gt;very&lt;/em&gt; interesting look at the &lt;a href="https://srvaroa.github.io/jvm/java/openjdk/biased-locking/2017/01/30/hashCode.html"&gt;implications on performance in the JVM that don&amp;rsquo;t override &lt;code&gt;#hashCode&lt;/code&gt; in certain contexts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: I can't believe it's not a queue: Using Kafka with Spring</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-i-can-t-believe-it-s-not-a-queue-using-kafka-with-spring" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-06:2833</id>
    <updated>2017-02-06T16:06:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Joe Kutner, Confluent&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/i-cant-believe-its-not-a-queue-using-kafka-with-spring"&gt;http://www.slideshare.net/SpringCentral/i-cant-believe-its-not-a-queue-using-kafka-with-spring&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Your existing message system is great, until it gets overloaded. Then what? That&amp;rsquo;s when you should try Kafka.&lt;/p&gt;
&lt;p&gt;Kafka is designed to be resilient. It takes the stress out of moving from a Spring monolith into a scalable system of microservices. Since you can capture every event that happens in your app, it&amp;rsquo;s great for logging. You can even use Kafka&amp;rsquo;s distributed, ordered log to simulate production load in your staging environment.&lt;/p&gt;
&lt;p&gt;Come learn about Kafka, where it fits in your Spring app, and how to make it do things message queues simply can&amp;rsquo;t.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/l8V6PkVV1Ec" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Architecting for cloud native data: Data Microservices done right using Spring Cloud</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-architecting-for-cloud-native-data-data-microservices-done-right-using-spring-cloud" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-06:2832</id>
    <updated>2017-02-06T16:05:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Fred Melo&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/architecting-for-cloud-native-data-data-microservices-done-right-using-spring-cloud-64889916"&gt;http://www.slideshare.net/SpringCentral/architecting-for-cloud-native-data-data-microservices-done-right-using-spring-cloud-64889916&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Microservices are definitely offering best practice guidance for those architecting cloud native applications. The ability to quickly create small services that can be individually deployed, configured and scaled, as building blocks for scalable, highly distributed and fault-tolerant systems has been causing every company to rethink on how to architect modern systems and making Spring Boot shine in popularity.&lt;/p&gt;
&lt;p&gt;In the same perspective, in order to achieve the same level of resilience, scalability and flexibility for stateful systems we need to start building our data components over the concepts of Data Microservices.&lt;/p&gt;
&lt;p&gt;This session will introduce Spring Cloud Stream from a Data Microservices perspective. We’ll explore its architecture model, highlighting the scalability, high availability, importance of dynamic transport biding layer and different options for orchestration / cloud deployment. We’ll then give an architecture walk-through on how Spring Cloud Data Flow orchestrates those Data Microservices into an advanced data pipelining solution, exemplified by a live demo.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Yx6s6J1Qvm8" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Spring For Apache Kafka</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-spring-for-apache-kafka" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-06:2831</id>
    <updated>2017-02-06T16:04:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speakers: Gary Russell&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/spring-for-apache-kafka"&gt;http://www.slideshare.net/SpringCentral/spring-for-apache-kafka&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;With the advent of the Kafka 0.9+ pure Java client, the Spring Team has created the new spring-kafka project with familiar Spring abstractions such as the KafkaTemplate, message listener container and POJO listener annotation @KafkaListener.&lt;/p&gt;
&lt;p&gt;In this talk we&amp;rsquo;ll take a look at the features of the project as well as the new version (2.0) of spring-integration-kafka which is now based on the Spring for Apache Kafka project.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/wo-aZ3ITLYU" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay: Spring and Big Data</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-spring-and-big-data" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-06:2830</id>
    <updated>2017-02-06T16:03:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Thomas Risberg&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/spring-and-big-data"&gt;http://www.slideshare.net/SpringCentral/spring-and-big-data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In this talk we will discuss ways to develop big data pipelines using Spring technologies. Learn how we can stream data into HDFS, run a Spark or a Hive job and extract the results from HDFS or Cassandra for presentation. The solution we develop will be a cloud-native pipeline that we will be able to run both locally and in the cloud.&lt;/p&gt;
&lt;p&gt;The presentation focuses around the code for our solution and we also cover how to set up a test environment both locally and in the cloud. While building our solution using Spring Boot and Spring for Apache Hadoop we’ll cover how this app can be integrated in a larger context such as Spring Cloud Stream and Spring Cloud Data Flow. We will also discus configuration solutions for running our app in a variety of environments.&lt;/p&gt;
&lt;p&gt;After attending this talk you will have an understanding of how a combination of Spring projects can help build Big Data solutions that incorporate and orchestrate many diverse technologies. You will also better understand how these solutions can be built to run in a cloud environment as well as locally on your development laptop.&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/yqRaZE-hXOQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>SpringOne Platform 2016 Replay:  Building resilient and evolutionary data microservices</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/06/springone-platform-2016-replay-building-resilient-and-evolutionary-data-microservices" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-06:2829</id>
    <updated>2017-02-06T16:02:00Z</updated>
    <content type="html">&lt;p&gt;Recorded at SpringOne Platform 2016.&lt;br/&gt;Speaker: Vinicius Carvalho&lt;br/&gt;Slides: &lt;a href="http://www.slideshare.net/SpringCentral/building-resilient-and-evolutionary-data-microservices"&gt;http://www.slideshare.net/SpringCentral/building-resilient-and-evolutionary-data-microservices&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;How can we build data pipelines that are resilient to change? Data usually outlives application code, and we have to be prepared to deploy streams that can cope with the evolution of that data that is in motion. This talk will discuss the approach and supporting patterns to write resilient data microservices with Spring Cloud Stream and Spring Cloud Dataflow. We will discuss the role of a centralized Schema repository, and how can we work with different data models and protocols to achieve schema evolution. A centralized schema service will also help us understand what kind of data is currently being served and consumed by the different parts of our distributed system.&lt;/p&gt;
&lt;p&gt;Samples for the presentation can be found here: &lt;a href="https://github.com/viniciusccarvalho/schema-evolution-samples"&gt;https://github.com/viniciusccarvalho/schema-evolution-samples&lt;/a&gt;&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/z9JRj7hddSQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;</content>
  </entry>
  <entry>
    <title>Spring for Apache Kafka 1.1.3 available now</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/06/spring-for-apache-kafka-1-1-3-available-now" />
    <category term="releases" label="Releases" />
    <author>
      <name>Artem Bilan</name>
    </author>
    <id>tag:spring.io,2017-02-06:2828</id>
    <updated>2017-02-06T16:01:56Z</updated>
    <content type="html">&lt;div class="paragraph"&gt;
&lt;p&gt;It is my pleasure to announce that the Spring for Apache Kafka &lt;a href="https://github.com/spring-projects/spring-kafka/milestone/14?closed=1"&gt;1.1.3&lt;/a&gt; maintenance release &lt;a href="http://projects.spring.io/spring-kafka/"&gt;is available now&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;As usual, thanks to the community for any feedback and contribution as always.
Looking forward for more!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;This release contains several bug fixes, including proper offset commit handling when using a &lt;code&gt;BatchListener&lt;/code&gt;; therefore an upgrade is highly recommended.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;Right now &lt;code&gt;master&lt;/code&gt; has been switched to the version &lt;code&gt;2.0&lt;/code&gt; for Java 8 and Spring Framework 5.0 code base.
We have some plans for high-level API for &lt;a href="https://kafka.apache.org/documentation/streams"&gt;Kafka Streams&lt;/a&gt; and &lt;a href="https://github.com/reactor/reactor-kafka"&gt;Reactor Kafka&lt;/a&gt; support.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="paragraph"&gt;
&lt;p&gt;&lt;a href="http://projects.spring.io/spring-kafka/"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-projects/spring-kafka"&gt;GitHub&lt;/a&gt; | &lt;a href="http://stackoverflow.com/questions/tagged/spring-kafka"&gt;Help&lt;/a&gt; | &lt;a href="http://docs.spring.io/spring-kafka/reference/htmlsingle/"&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;</content>
  </entry>
  <entry>
    <title>Spring Cloud Camden.SR5 is available</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/06/spring-cloud-camden-sr5-is-available" />
    <category term="releases" label="Releases" />
    <author>
      <name>Marcin Grzejszczak</name>
    </author>
    <id>tag:spring.io,2017-02-06:2827</id>
    <updated>2017-02-06T11:37:56Z</updated>
    <content type="html">&lt;p&gt;On behalf of the team, I am pleased to announce that Service Release 5 of the &lt;a href="http://cloud.spring.io"&gt;Spring Cloud Camden&lt;/a&gt; Release Train is available today. The release can be found in our &lt;a href="http://repo.spring.io/release"&gt;Spring Release repository&lt;/a&gt; and &lt;a href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22spring-cloud-dependencies%22"&gt;Maven Central&lt;/a&gt;. The documentation can be found &lt;a href="http://cloud.spring.io/spring-cloud-static/Camden.SR5/"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Included in this release is the Spring Boot 1.5 compatibility of all the Spring Cloud projects. Other than the addition of Spring Cloud Task, this release includes primarily bug fixes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt;: This release is not compatible with &lt;strong&gt;Spring Boot 1.3&lt;/strong&gt;. In other words your Spring Boot 1.3 application &lt;strong&gt;will not work&lt;/strong&gt; with Camden.SR5.&lt;/p&gt;&lt;h4&gt;&lt;a href="#the-following-modules-were-updated-as-part-of-camden-sr5" class="anchor" name="the-following-modules-were-updated-as-part-of-camden-sr5"&gt;&lt;/a&gt;The following modules were updated as part of Camden.SR5:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Cloud Build &lt;a href="https://github.com/spring-cloud/spring-cloud-build/milestone/12?closed=1"&gt;1.2.2.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Stream &lt;a href="https://spring.io/blog/2017/01/20/spring-cloud-stream-brooklyn-sr2-and-chelsea-m1-released"&gt;Brooklyn.SR2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Netflix &lt;a href="https://github.com/spring-cloud/spring-cloud-netflix/milestone/36?closed=1"&gt;1.2.5.RELEASE&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Spring Cloud Sleuth &lt;a href="https://github.com/spring-cloud/spring-cloud-sleuth/milestone/21?closed=1"&gt;1.1.2.RELEASE&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And, as always, we welcome feedback: either on &lt;a href="https://github.com/spring-cloud"&gt;GitHub&lt;/a&gt;, on &lt;a href="https://gitter.im/spring-cloud/spring-cloud"&gt;gitter&lt;/a&gt;, on &lt;a href="http://stackoverflow.com/questions/tagged/spring-cloud"&gt;Stack Overflow&lt;/a&gt;, or on &lt;a href="https://twitter.com/SpringCloud"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Cloud Foundry Manifest Editor Beta released for Visual Studio Code</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/03/cloud-foundry-manifest-editor-beta-released-for-visual-studio-code" />
    <category term="releases" label="Releases" />
    <author>
      <name>Martin Lippert</name>
    </author>
    <id>tag:spring.io,2017-02-03:2826</id>
    <updated>2017-02-03T09:03:04Z</updated>
    <content type="html">&lt;p&gt;As part of our activities to support developers around the globe building applications with Spring and deploying those apps to Cloud Foundry and PCF, we are proud to announce our first beta version of the &lt;a href="https://marketplace.visualstudio.com/items?itemName=Pivotal.vscode-manifest-yaml"&gt;Cloud Foundry Manifest editing support&lt;/a&gt; for &lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt; (on macOS, Linux x64, and Windows).&lt;/p&gt;
&lt;center&gt;&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/Ao6Mx6Q0XKE?rel=0" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;h2&gt;&lt;a href="#why-visual-studio-code" class="anchor" name="why-visual-studio-code"&gt;&lt;/a&gt;Why Visual Studio Code?&lt;/h2&gt;
&lt;p&gt;Visual Studio Code is a lightweight and open-source code editor that runs on macOS, Linux x64, and Windows. It is based on an interesting architecture with regards to extensibility. Support for languages in Visual Studio Code gets implemented as so called “language servers”. Those language servers are independent of the editor that you use. The editor and the language server are connected using a protocol (called the language server protocol). Even though Visual Studio Code introduced this protocol, other editors and IDEs started to adopt this language server protocol - like the Eclipse IDE (from version 4.7 on) or Eclipse Che as a cloud IDE. Other lightweight editors like Sublime Text and Atom will likely offer support in the near future, too. As a result, we can focus on implementing the Cloud Foundry manifest editor support as an independent language server and you can add this support to the editor or IDE of your choice.&lt;/p&gt;
&lt;p&gt;Visual Studio Code introduced this protocol and offers the best support for it at the moment - including a nice marketplace for those extensions that allow a smooth and easy experience installing and using them. Therefore, as a first step, our language server for Cloud Foundry manifest files is now available on that marketplace. Open your installation of Visual Studio Code, go to the extensions section, and search for “manifest”. The Cloud Foundry Manifest Editor support will show up.&lt;/p&gt;&lt;h2&gt;&lt;a href="#working-with-manifest-files" class="anchor" name="working-with-manifest-files"&gt;&lt;/a&gt;Working with manifest files&lt;/h2&gt;
&lt;p&gt;Once installed, it helps you working with Cloud Foundry manifest files. It provides content-assist for properties and certain values, validates the property keys and values (to avoid typos and surprises when deploying the app), and provides extensive hover help.&lt;/p&gt;
&lt;p&gt;The content-assist can also provide help entering certain values that depend on your specific Cloud Foundry target that you use. To be more specific, the tooling infers the available buildpacks as well as a list of service instances that you have around on your Cloud Foundry target. Once that information is available, it becomes super easy to define the buildpack or services in your Cloud Foundry manifest files.&lt;/p&gt;
&lt;p&gt;In order to get the necessary information, the tooling uses the CF CLI configuration and its access token. So whatever you have configured in your CF CLI (e.g. your API endpoint + space) will be used automatically to gather the information about buildpacks and services on demand (as long as you are logged into the CF target on the CLI).&lt;/p&gt;&lt;h2&gt;&lt;a href="#outlook" class="anchor" name="outlook"&gt;&lt;/a&gt;Outlook&lt;/h2&gt;
&lt;p&gt;This marks our first step towards implementing tooling in an IDE-agnostic way, adopting the language server protocol from Visual Studio Code - in addition to our work on the Eclipse-based Spring Tool Suite and our ongoing support for Jetbrains to improve their awesome Spring tooling in IntelliJ even further. And since this is just our first step here, there is more to come in 2017, like new language servers around Spring and Spring Boot, improved versions of the manifest editing support, and more options for editors and IDEs to plug this into. One of those options will remain the Spring Tool Suite, while other (lightweight) editors and IDEs will get awesome Spring and Spring Boot tooling that way, too. Stay tuned.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring IO Platform Brussels-RC1</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/02/spring-io-platform-brussels-rc1" />
    <category term="releases" label="Releases" />
    <author>
      <name>Andy Wilkinson</name>
    </author>
    <id>tag:spring.io,2017-02-01:2824</id>
    <updated>2017-02-02T20:50:00Z</updated>
    <content type="html">&lt;p&gt;It&amp;rsquo;s my pleasure to announce that Spring IO Platform Brussels-RC1 is available now from the &lt;a href="http://repo.spring.io/milestone/"&gt;Spring milestone repository&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;The Brussels release introduces the following projects to the Platform:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring Kafka 1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Brussels release also upgrades the versions of a number of projects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Spring AMQP 1.7&lt;/li&gt;
  &lt;li&gt;Spring Boot 1.5&lt;/li&gt;
  &lt;li&gt;Spring Data Ingalls&lt;/li&gt;
  &lt;li&gt;Spring Integration Java DSL 1.2&lt;/li&gt;
  &lt;li&gt;Spring Integration Kafka 2.1&lt;/li&gt;
  &lt;li&gt;Spring LDAP 2.3&lt;/li&gt;
  &lt;li&gt;Spring Security 4.2&lt;/li&gt;
  &lt;li&gt;Spring Session 1.3&lt;/li&gt;
  &lt;li&gt;Spring Web Services 2.4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The versions of numerous third-party dependencies have also been updated.&lt;/p&gt;
&lt;p&gt;Please take RC1 for a spin and let us know if you find any problems. All being well, Brussels-RELEASE will be available later this month.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://platform.spring.io/platform"&gt;Project Page&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform"&gt;GitHub&lt;/a&gt; | &lt;a href="https://github.com/spring-io/platform/issues"&gt;Issues&lt;/a&gt; | &lt;a href="http://docs.spring.io/platform/docs/Brussels-RC1/reference/htmlsingle"&gt;Documentation&lt;/a&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Spring Team at Devnexus 2017</title>
    <link rel="alternate" href="https://spring.io/blog/2017/02/01/spring-team-at-devnexus-2017" />
    <category term="news" label="News and Events" />
    <author>
      <name>Pieter Humphrey</name>
    </author>
    <id>tag:spring.io,2017-02-01:2825</id>
    <updated>2017-02-01T16:31:00Z</updated>
    <content type="html">&lt;p&gt;If you are joining the Spring Team at the SOLD OUT &lt;a href="https://www.devnexus.com/s/index"&gt;DevNexus 2017&lt;/a&gt; event in Atlanta, GA on February 22-24 2017, here&amp;rsquo;s where you can find us and other Pivotal experts!&lt;/p&gt;
&lt;p&gt;Pivotal is sponsoring and will be at booth # 7 from 9am-3pm on Thursday Feb 23, and 9am - 6pm on Friday Feb 24.&lt;/p&gt;
&lt;p&gt;We will have experts available at the booth to talk to you about Spring Boot, Spring Cloud, Spring Cloud Data Flow, Cloud Foundry, and much more. Don’t miss these talks and workshops from Spring &amp;amp; Pivotal leaders on Cloud-Native, Reactive Spring, and much more!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wed Feb 22 - Workshops (Full Day)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/15525"&gt;Cloud Native Java Workshop - Josh Long&lt;/a&gt;&lt;br/&gt;WS Room A312 9:00 AM - 5:30 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17473"&gt;Cloud Native Architecture Patterns - Matt Stine&lt;/a&gt;&lt;br/&gt;WS Room A313 9:00 AM - 5:30 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/15480"&gt;Microservices based Streaming and Batch Data Processing - Sabby Anandan, Glenn Renfro&lt;/a&gt;&lt;br/&gt;WS Room A314 9:00 AM - 5:30 PM&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Thurs Feb 23&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17213"&gt;Reactive Spring - Josh Long&lt;/a&gt;&lt;br/&gt;Frameworks Track, Room A311 1:00 PM - 2:15 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17236"&gt;Securely Managing Secrets with Vault - Mark Paluch&lt;/a&gt;&lt;br/&gt;Security Track, Room A315 2:30 PM - 3:45 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17523"&gt;Modern batch processing with Spring Batch - Michael Minella&lt;/a&gt;&lt;br/&gt;Tools Track, Room A313 4:00 PM - 5:15 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17320"&gt;Reactive Functional Data Pipelines with Spring Cloud Microservices - Marius Bogoevici, Mark Pollack&lt;/a&gt;&lt;br/&gt;Data Science and Machine Learning Track, Room A403 4:00 PM - 5:15 PM &lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17153"&gt;Reactor 3, the Reactive Foundation for Java 8 and Spring 5 - Simon Baslé , Stephane Maldini&lt;/a&gt;&lt;br/&gt;Frameworks Track - Room A311 5:30 PM - 6:45 PM&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Friday Feb 24&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17357"&gt;Data Processing With Microservices - Michael Minella&lt;/a&gt;&lt;br/&gt;Microservices Track - Room A302 10:30 AM - 11:45 AM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17410"&gt;Breaking the Magician&amp;rsquo;s Code: Diving deeper into Spring Boot internals - Madhura Bhave, Phillip Webb&lt;/a&gt;&lt;br/&gt;Frameworks Track, Room A311 2:30 PM - 3:45 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17198"&gt;This stuff is cool, but HOW CAN I GET MY COMPANY TO DO IT? Businessing the S*** out of Transformative Development!&lt;/a&gt;- Mark Heckler&lt;br/&gt;Agile Track - Room A314 2:30 PM - 3:45 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17446"&gt;Architecture Deep Dive in Spring Security - Joe Grandja&lt;/a&gt;&lt;br/&gt;Security Track - Room A315 2:30 PM - 3:45 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17219"&gt;Clouds &amp;amp; Containers: Give it to Me Straight, What&amp;rsquo;s the Difference &amp;amp; Why Should I Care?&lt;/a&gt;&lt;br/&gt;Microservices Track - Room A302 4:00 PM - 5:15 PM&lt;/p&gt;
&lt;p&gt;&lt;a href="https://devnexus.com/s/devnexus2017/presentations/17305"&gt;Composing Music in the Cloud - James Weaver&lt;/a&gt;&lt;br/&gt;Cloud Track - Room A305 4:00 PM - 5:15 PM&lt;/p&gt;</content>
  </entry>
</feed>
